
type Range(min:number, max:number) {
    self.min = min;
    self.max = max;
    self.current = min - 1;

    next(): bool => (self.current := self.current + 1) < self.max;
    current(): number => self.current;
}
    
   let range = new Range(0,10) in 
   while(range.next()) 
   {
        print(range.current());
   };

type A{
    self.x = 2;
    getx() => self.x;
}

type B inherits A{
    self.y = 3;
}
  
type C inherits B{
    self.x = 4;
    getx() => base() + base();
}

let b = (new C()).getx() in print(b);
let a = new A();

let b = new B();

let c = new C();

a := b;
//b := a;

let var = 3;
//var2 := 2;

print(var);

print(while(var<=10){
    var:= var + 1;
    print(var);
}* 10);

for(var := 1;var < 10 or False; var:= var + 1)
{
    let c = 10 in print("c = "@ c @", var = "@ var @ ", result = " @ c/var @ ", resto =" @@ c%var);
}

